{"version":3,"file":"avatar-view.cjs.production.min.js","sources":["../src/utils/useEyeBlink.ts","../src/utils/useHeadMovement.ts","../src/utils/utils.ts","../src/components/avatar.tsx","../src/components/loader.tsx","../src/index.tsx"],"sourcesContent":["import { Nodes } from './utils';\nimport { useEffect } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { MeshStandardMaterial, SkinnedMesh } from 'three';\n\nlet blinkTime: number = 999;\nlet timeout: NodeJS.Timeout;\n\nlet headMesh: SkinnedMesh;\nlet morphIndex: number = 0;\n\nconst setNextBlink = () => {\n  blinkTime = 0;\n  timeout = setTimeout(setNextBlink, Math.random() * 5000 + 2000);\n};\n\nexport default function useEyeBlink(\n  enabled: boolean | undefined,\n  nodes: Nodes\n) {\n  useEffect(() => {\n    if (!enabled) return;\n\n    headMesh = (nodes.Wolf3D_Head || nodes.Wolf3D_Avatar) as SkinnedMesh;\n\n    const material = headMesh.material as MeshStandardMaterial;\n    material.morphTargets = true;\n\n    if (headMesh.morphTargetDictionary && headMesh.morphTargetInfluences) {\n      morphIndex = headMesh.morphTargetDictionary.eyesClosed;\n    }\n\n    timeout = setTimeout(setNextBlink, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [nodes, enabled]);\n\n  useFrame((_, delta) => {\n    if (!enabled) return;\n\n    if (blinkTime < 2 && headMesh.morphTargetInfluences) {\n      let value = Math.abs(Math.sin((blinkTime * Math.PI) / 2));\n      blinkTime += delta * 10;\n      headMesh.morphTargetInfluences[morphIndex] = value;\n    } else if (headMesh.morphTargetInfluences) {\n      headMesh.morphTargetInfluences[morphIndex] = 0;\n    }\n  });\n}\n","import { Vector2 } from 'three';\nimport { useEffect } from 'react';\nimport { lerp, mapRange, Nodes } from './utils';\nimport { useFrame, useThree } from '@react-three/fiber';\n\nconst rad = Math.PI / 180;\nconst eyeRotationOffsetX = 90 * rad;\n\nlet reset: boolean = false;\nlet timeout: NodeJS.Timeout;\n\nconst targetPos = new Vector2(0, 0);\nconst currentPos = new Vector2(0, 0);\n\nconst setResetTrue = () => {\n  timeout = setTimeout(() => {\n    reset = true;\n  }, 1000);\n};\n\nconst setResetFalse = () => {\n  clearTimeout(timeout);\n  reset = false;\n};\n\nexport default function useHeadMovement(\n  enabled: boolean | undefined,\n  nodes: Nodes\n) {\n  const { gl } = useThree();\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    gl.domElement.addEventListener('mouseleave', setResetTrue);\n    gl.domElement.addEventListener('mouseenter', setResetFalse);\n\n    return () => {\n      gl.domElement.removeEventListener('mouseleave', setResetTrue);\n      gl.domElement.removeEventListener('mouseenter', setResetFalse);\n    };\n  }, [gl.domElement, enabled]);\n\n  useFrame(state => {\n    if (!enabled) return;\n\n    const cameraRotation = Math.abs(state.camera.rotation.z);\n\n    if (!reset && cameraRotation < 0.2) {\n      targetPos.x = mapRange(state.mouse.y, -1, 1, 5 * rad, -5 * rad);\n      targetPos.y = mapRange(state.mouse.x, -1, 1, -10 * rad, 10 * rad);\n    } else {\n      targetPos.set(0, 0);\n    }\n\n    currentPos.x = lerp(currentPos.x, targetPos.x);\n    currentPos.y = lerp(currentPos.y, targetPos.y);\n\n    nodes.Neck.rotation.x = currentPos.x + 0.1;\n    nodes.Neck.rotation.y = currentPos.y;\n\n    nodes.Head.rotation.x = currentPos.x * 2;\n    nodes.Head.rotation.y = currentPos.y * 2;\n\n    nodes.RightEye.rotation.x = currentPos.x - eyeRotationOffsetX;\n    nodes.LeftEye.rotation.x = currentPos.x - eyeRotationOffsetX;\n\n    nodes.RightEye.rotation.z = currentPos.y * 3 + Math.PI;\n    nodes.LeftEye.rotation.z = currentPos.y * 3 + Math.PI;\n  });\n}\n","import { LinearFilter, Material, Object3D } from 'three';\n\nexport interface Nodes {\n  [name: string]: Object3D;\n}\n\nexport interface Materials {\n  [name: string]: Material;\n}\n\nexport const clamp = (value: number, min: number, max: number) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const lerp = (start: number, end: number, time: number = 0.05) => {\n  return start * (1 - time) + end * time;\n};\n\nexport const mapRange = (\n  value: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number\n) => {\n  value = clamp(value, inMin, inMax);\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n};\n\nexport const hideHands = (nodes: Nodes) => {\n  if (nodes.Wolf3D_Hands) {\n    nodes.Wolf3D_Hands.visible = false;\n  }\n\n  if (nodes.RightHand && nodes.LeftHand) {\n    nodes.RightHand.position.set(0, -2, 0);\n    nodes.LeftHand.position.set(0, -2, 0);\n  }\n};\n\nexport const correctMaterials = (materials: Materials) => {\n  Object.values(materials).forEach((material: any) => {\n    // applying LinearFilter to texture to avoid  pixellization\n    if (material.map) material.map.minFilter = LinearFilter;\n\n    // support transparency\n    if (material) material.depthWrite = true;\n  });\n};\n\nconst SkinnedMeshType = 'SkinnedMesh';\nexport const isSkinnedMesh = (node: Object3D) => {\n  return node.type === SkinnedMeshType;\n};\n","import React, { useEffect } from 'react';\nimport { Object3D, Vector3 } from 'three';\nimport { useGLTF } from '@react-three/drei';\nimport useEyeBlink from '../utils/useEyeBlink';\nimport useHeadMovement from '../utils/useHeadMovement';\nimport { dispose, useGraph } from '@react-three/fiber';\nimport { correctMaterials, hideHands, isSkinnedMesh } from '../utils/utils';\n\ninterface AvatarProps {\n  url: string;\n  eyeBlink?: boolean;\n  headMovement?: boolean;\n  onLoaded?: () => void;\n}\n\nconst position = new Vector3(0, -0.6, 0);\n\nexport default function Avatar({\n  url,\n  eyeBlink,\n  headMovement,\n  onLoaded,\n}: AvatarProps) {\n  const { scene } = useGLTF(url);\n  const { nodes, materials } = useGraph(scene);\n\n  useEyeBlink(eyeBlink, nodes);\n  useHeadMovement(headMovement, nodes);\n\n  useEffect(() => {\n    hideHands(nodes);\n    correctMaterials(materials);\n\n    if (onLoaded) onLoaded();\n\n    return () => {\n      Object.values(materials).forEach(dispose);\n\n      Object.values(nodes)\n        .filter(isSkinnedMesh)\n        .forEach(dispose);\n    };\n  }, [materials, nodes, url, onLoaded]);\n\n  return (\n    <group position={position}>\n      <primitive key=\"armature\" object={nodes.Hips} />\n      {Object.values(nodes)\n        .filter(isSkinnedMesh)\n        .map((node: Object3D) => (\n          <primitive key={node.name} object={node} receiveShadow castShadow />\n        ))}\n    </group>\n  );\n}\n","import React from 'react';\nimport { Html, useProgress } from '@react-three/drei';\n\nconst Loader = () => {\n  const { progress } = useProgress();\n  return <Html center>{progress} % loaded</Html>;\n};\n\nexport default Loader;\n","import type { CSSProperties, ReactNode } from 'react';\nimport type { PresetsType } from '@react-three/drei/helpers/environment-assets';\nimport React, { Suspense } from 'react';\nimport Avatar from './components/avatar';\nimport Loader from './components/loader';\nimport { Canvas } from '@react-three/fiber';\nimport {\n  Environment,\n  OrbitControls,\n} from '@react-three/drei';\n\ninterface AvatarViewProps {\n  url: string;\n  eyeBlink?: boolean;\n  headMovement?: boolean;\n  rotateAvatar?: boolean;\n  style?: CSSProperties;\n  environment?: PresetsType;\n  fallback?: ReactNode;\n}\n\nconst defaultStyle = {\n  width: '250px',\n  height: '250px',\n  backgroundColor: 'orange',\n  borderRadius: '100%',\n};\n\nexport { Loader };\n\nexport default function AvatarView({\n  url,\n  style,\n  rotateAvatar,\n  eyeBlink,\n  headMovement,\n  environment = 'sunset',\n  fallback = <Loader />,\n}: AvatarViewProps) {\n  return (\n    <Canvas\n      style={style || defaultStyle}\n      camera={{ fov: 40, position: [0, 0, 0.6] }}\n    >\n      <Suspense fallback={fallback || null}>\n        {environment && <Environment preset={environment} />}\n        {rotateAvatar && <OrbitControls enablePan={false} enableZoom={false} />}\n        <Avatar url={url} eyeBlink={eyeBlink} headMovement={headMovement} />\n      </Suspense>\n    </Canvas>\n  );\n}\n"],"names":["timeout","headMesh","blinkTime","morphIndex","setNextBlink","setTimeout","Math","random","lerp","start","end","time","mapRange","value","inMin","inMax","outMin","outMax","min","max","clamp","isSkinnedMesh","node","type","rad","PI","eyeRotationOffsetX","reset","targetPos","Vector2","currentPos","setResetTrue","setResetFalse","clearTimeout","position","Vector3","Avatar","url","eyeBlink","headMovement","onLoaded","useGLTF","useGraph","scene","nodes","materials","enabled","useEffect","Wolf3D_Head","Wolf3D_Avatar","material","morphTargets","morphTargetDictionary","morphTargetInfluences","eyesClosed","useFrame","_","delta","abs","sin","useEyeBlink","gl","useThree","domElement","addEventListener","removeEventListener","state","cameraRotation","camera","rotation","z","x","mouse","y","set","Neck","Head","RightEye","LeftEye","useHeadMovement","Wolf3D_Hands","visible","RightHand","LeftHand","hideHands","Object","values","forEach","map","minFilter","LinearFilter","depthWrite","correctMaterials","dispose","filter","React","key","object","Hips","name","receiveShadow","castShadow","Loader","useProgress","Html","center","progress","defaultStyle","width","height","backgroundColor","borderRadius","style","rotateAvatar","environment","fallback","Canvas","fov","Suspense","Environment","preset","OrbitControls","enablePan","enableZoom"],"mappings":"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"}